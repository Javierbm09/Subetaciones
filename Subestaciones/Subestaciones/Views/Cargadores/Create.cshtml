@model Subestaciones.Models.Cargadores

@{
    ViewBag.Title = "Cargador";
    ViewBag.PTitle = "Insertar nuevo Cargador";
}

@section breadcrumb {
    <li><a href="#"><i class="ti-layout-accordion-list"></i></a></li>
    <li><a href="@Url.Action("Index","Cargadores")">Cargador</a></li>
    <li class="active">Insertar</li>
}

<!-- content starts here -->
<div class="x_content">
    <!-- content starts here -->

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.IdCargador)

            <div id="SeccionTipoCargador">
                <h4>Tipo de Cargador</h4>                
                <div class="row clearfix">
                    <div class="col-md-12">
                        <div id="VPTipoCargador" class="form-group">
                            @Html.EditorFor(model => model.TipoCargador, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.TipoCargador, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>


            <div id="SeccionVoltajeCorrienteDirecta">
                <h4>Tensión CD</h4>
                <div class="row clearfix">
                    <div class="col-md-12">
                        <div id="VPVoltajeCorrienteDirecta" class="form-group">
                            @Html.EditorFor(model => model.VoltajeCorrienteDirecta, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.VoltajeCorrienteDirecta, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div id="SeccionVoltajeCorrienteAlterna">
                <h4>Tensión CA</h4>
                <div class="row clearfix">
                    <div class="col-md-12">
                        <div id="VPVoltajeCorrienteAlterna" class="form-group">
                            @Html.EditorFor(model => model.VoltajeCA, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.VoltajeCA, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div id="SeccionCorriente">
                <h4>Corriente</h4>
                <div class="row clearfix">
                    <div class="col-md-12">
                        <div id="VPCorriente" class="form-group">
                            @Html.EditorFor(model => model.Corriente, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Corriente, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-12">
                    <button type="submit" class="btn btn-success"><i class="fa fa-save"></i> Guardar Cambios</button>
                    <a class="btn btn-default" href="@Url.Action("Index","Cargadores")"><i class="fa fa-list"></i> Listado</a>
                </div>
            </div>
        </div>

    }

    @section styles {
        @Styles.Render("~/Style/Select2")
    }

    @section script {
        @Scripts.Render("~/Script/Select2")
    }





    @*@using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Sub_NomCargadores</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.TipoCargador, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.TipoCargador, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TipoCargador, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.VoltajeCorrienteDirecta, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.VoltajeCorrienteDirecta, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VoltajeCorrienteDirecta, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Corriente, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Corriente, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Corriente, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.VoltajeCA, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.VoltajeCA, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VoltajeCA, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>

        @section script {
            @Scripts.Render("~/bundles/jqueryval")
        }*@
